const { cmd, commands } = require('../command');
const { runtime } = require('../lib/functions');
const axios = require('axios');
const yts = require("yt-search");
const config = require("../config");
const commandPrefix = config.PREFIX;

cmd({
    pattern: "menu4",
    react: "üé∂",
    desc: "Check bot owner.",
    category: "menu",
    filename: __filename
}, async (conn, mek, m, { from, prefix, pushname, q, reply }) => {
    try {

        let teksnya = `*üé°ùë©ùë¨ùëµ_ùë©ùë∂ùëªüé°*

ùóõùó≤ùóπùóπùóº ${pushname}üëãüèª

‚ï≠‚îÅ‚ä±‚õ≤ùó™ùóòùóüùóñùó¢ùó†ùóò ùóßùó¢ ùó†ùóòùó°ùó®‚õ≤‚ä±‚îÅ‚ïÆ
‚îÉü§ñ *.·¥Ä…™·¥ç·¥á…¥·¥ú*
‚îÉüì• *.·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö·¥ç·¥á…¥·¥ú*
‚îÉüß¨ *.…¢ Ä·¥è·¥ú·¥ò·¥ç·¥á…¥·¥ú*
‚îÉüß∞ *.·¥õ·¥è·¥è üs·¥ç·¥á…¥·¥ú*
‚îÉüîÑ *.·¥Ñ·¥è…¥·¥†·¥á Ä·¥õ·¥ç·¥á…¥·¥ú*
‚îÉüîç *.Íú±·¥á·¥Ä Ä·¥Ñ ú·¥ç·¥á…¥·¥ú*
‚îÉüïå *.«´·¥ú Ä·¥Ä…¥·¥á·¥ç…¥·¥ú*
‚îÉüìö *.s·¥õ·¥ú·¥Ö è·¥ç·¥á…¥·¥ú*
‚îÉüïµÔ∏è‚Äç‚ôÇÔ∏è *.s·¥õ·¥Ä ük·¥ç·¥á…¥·¥ú*
‚îÉüëæ *. ô·¥ú…¢·¥ç·¥á…¥·¥ú*
‚îÉüéÆ *.…¢·¥Ä·¥ç·¥áÍú±·¥ç·¥á…¥·¥ú*
‚îÉüí∞ *.·¥Ñ Ä è·¥ò·¥õ·¥è·¥ç·¥á…¥·¥ú*
‚îÉüéâ *.“ì·¥ú…¥·¥ç·¥á…¥·¥ú*
‚îÉüîû *.…¥s“ì·¥°·¥ç·¥á…¥·¥ú*
‚îÉü™Ñ *.·¥ò ú·¥è·¥õ·¥è·¥èx è·¥ç·¥á…¥·¥ú*
‚îÉüñºÔ∏è *.·¥á·¥ò ú·¥è·¥õ·¥è·¥ç·¥á…¥·¥ú*
‚îÉüé• *.·¥Ä…¥…™·¥ç·¥á·¥ç·¥á…¥·¥ú*
‚îÉüõ°Ô∏è *.·¥è·¥°…¥·¥á Ä·¥ç·¥á…¥·¥ú*
‚îÉ‚öôÔ∏è *.s ès·¥õ·¥á·¥ç·¥ç·¥á…¥·¥ú*
‚îÉüìú *.·¥Ä ü ü·¥ç·¥á…¥·¥ú*
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚ïØ`;

    let fatter = `> üéóÔ∏è ú·¥á Ä·¥á …™s  è·¥è·¥ú Ä ·¥ç·¥á…¥·¥úüéóÔ∏è`;
    const buttonMenu = {
      title: "üîë Select menu type",
      rows: [
        { title: "DOWNLOAD MENU", description: "Download commands", id: `.dlmenu` },
        { title: "SEARCH MENU", description: "Search commands", id: `${commandPrefix}searchmenu` },
        { title: "CONVERT MENU", description: "Convert commands", id: `${commandPrefix}convertmenu` },
        { title: "MAIN MENU", description: "Convert commands", id: `${commandPrefix}mainmenu` },
        { title: "GROUP MENU", description: "Group commands", id: `${commandPrefix}groupmenu` },
        { title: "LOGO MENU", description: "Logo commands", id: `${commandPrefix}logomenu` },
        { title: "BUG MENU", description: "Bug commands", id: `${commandPrefix}bugmenu` },
        { title: "MOVIE MENU", description: "Movie commands", id: `${commandPrefix}moviemenu` },
        { title: "TOOLS MENU", description: "Tools commands", id: `${commandPrefix}toolsmenu` }
      ]
    };

    const buttonOptions = {
      title: "Click Here‚éô",
      sections: [buttonMenu]
    };

    const buttonImage = { url: config.MENU_IMAGE_URL };
    const aliveButton = { displayText: "ALIVE" };
    const pingButton = { displayText: "PING" };

    const buttons = [
      { buttonId: `${commandPrefix}alive`, buttonText: aliveButton },
      { buttonId: `${commandPrefix}ping`, buttonText: pingButton },
      {
        buttonId: "action",
        buttonText: { displayText: "ini pesan interactiveMeta" },
        type: 4,
        nativeFlowInfo: {
          name: "single_select",
          paramsJson: JSON.stringify(buttonOptions)
        }
      }
    ];

      const messageOptions = {
        image: { url: "https://files.catbox.moe/6vrc2s.jpg" },
        caption: teksnya,
        footer: fatter,
        buttons: buttons,
        headerType: 1,
        viewOnce: true
      };
      await conn.sendMessage(from, messageOptions, { quoted: mek });
      
      
      
        

    } catch (e) {
        console.error(e);
        await reply("An error occurred. Please try again.");
    }
});